FROM node:22-alpine AS base

# Install system dependencies
RUN apk add --no-cache openssl

# Enable pnpm
RUN corepack enable
RUN corepack prepare pnpm@latest --activate

# Build stage
FROM base AS builder

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install all dependencies (including dev dependencies for build)
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Build the application (if you have a build step)
# RUN pnpm run build

# Production stage
FROM base AS runner

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod

# Copy built application and generated Prisma client from builder stage
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/src/api ./api
COPY --from=builder /app/src/index.js ./

# Remove environment files for security
RUN rm -f .env*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S hono -u 1001 && \
    chown -R hono:nodejs /app

USER hono

EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/api/v1/ || exit 1

# Start the application
CMD ["sh", "-c", "pnpm prisma migrate deploy && pnpm start"]