# -------------------------
# Base image
# -------------------------
FROM node:22-alpine AS base

# Install system dependencies
RUN apk add --no-cache openssl

# Enable pnpm (via corepack)
RUN corepack enable && corepack prepare pnpm@latest --activate

# -------------------------
# Builder stage
# -------------------------
FROM base AS builder

WORKDIR /app

# Copy and install dependencies
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# -------------------------
# Production runner stage
# -------------------------
FROM base AS runner

WORKDIR /app

# Copy package files and install only prod deps
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile --prod

# Copy generated Prisma client and source code
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/src ./src

# Copy tsx from builder stage (if installed as dev dep)
COPY --from=builder /app/node_modules ./node_modules

# Remove any env files for security
RUN rm -f .env*

# Add non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S hono -u 1001 && \
    chown -R hono:nodejs /app
USER hono

EXPOSE 3001

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/api/v1/ || exit 1

# Start the app with tsx
CMD ["sh", "-c", "pnpm prisma migrate deploy && pnpm exec tsx src/index.ts"]
