services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dosatsu-app
    ports:
      - "3001:3001"
    environment:
      DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dosatsu-network
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: dosatsu-poll-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - dosatsu_poll_postgres_data:/var/lib/postgresql/data
    networks:
      - dosatsu-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dosatsu-poll-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - dosatsu-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  dosatsu-network:
    driver: bridge

volumes:
  dosatsu_poll_postgres_data:
    driver: local
  pgadmin_data:
    driver: local